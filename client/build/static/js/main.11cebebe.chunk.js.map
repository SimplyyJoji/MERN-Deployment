{"version":3,"sources":["views/Pets.js","views/NewPet.js","views/SinglePet.js","views/EditPet.js","views/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Pets","props","useState","pets","setPets","useEffect","axios","get","then","res","data","catch","err","console","log","map","pet","name","type","likeCount","onClick","e","likedPet","updateBody","put","_id","updatedPets","handleLikeCount","style","cursor","to","NewPlant","setName","setType","desc","setDesc","skillOne","setSkillOne","skillTwo","setSkillTwo","skillThree","setSkillThree","errors","setErrors","onSubmit","event","preventDefault","newPet","post","navigate","response","handlerNewPlantSubmit","color","message","onChange","target","value","input","SinglePet","setPet","id","delId","delete","EditPet","editPet","handlerEditPetSubmit","NotFound","App","className","path","NewPet","from","noThrow","default","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11cebebe.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from '@reach/router'\n\n//useState(null) we need state and we need to loop so store in empty array\n//Remember a leading  / for all \nconst Pets = (props) => {\n  const [pets, setPets] = useState([]);\n\n  useEffect(() => {\n    axios\n    .get(\"http://localhost:5000/api/pets\")\n    .then((res) => {\n      setPets(res.data);\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  }, []);\n\n  const handleLikeCount = (likedPet) => {\n    const updateBody = {\n      likeCount: likedPet.likeCount + 1,\n    };\n\n    // re-use update route since it can be used to update any part\n    axios\n      .put(`http://localhost:5000/api/pets/${likedPet._id}`, updateBody)\n      .then((res) => {\n        const updatedPets = pets.map((pet) => {\n          if (likedPet._id === pet._id) {\n            return res.data; // the updated post from DB.\n          }\n          return pet;\n        });\n\n        setPets(updatedPets);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <div>\n      <h1>Pet Shelter</h1>\n      <h2>These pets are looking for a good home</h2>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n        {pets.map((pet) => {\n        return <tr key={pet._id}>\n        <td>{pet.name}</td>\n        <td>{pet.type}</td>\n        <span>\n                Likes: {pet.likeCount}{\" \"}\n                <span\n                  onClick={(e) => {\n                    handleLikeCount(pet);\n                  }}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  &#8593;\n                </span>\n                  </span>\n\n        <td><Link to={\"/pets/\" + pet._id}>{pet.name}</Link> | </td>\n        <Link to={\"/pets/\" + pet._id + \"/edit\"}>Edit</Link>\n        </tr>\n         \n      })}\n        </tbody>\n      </table>\n     \n    </div>\n  );\n}\nexport default Pets;","import React, {useState} from \"react\";\nimport axios from 'axios';\nimport { navigate } from \"@reach/router\";\n\nconst NewPlant = (props) => {\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [skillOne, setSkillOne] = useState(\"\");\n  const [skillTwo, setSkillTwo] = useState(\"\");\n  const [skillThree, setSkillThree] = useState(\"\");\n  const [errors, setErrors] = useState(null);\n\n\n  const handlerNewPlantSubmit = (event) => {\n    event.preventDefault();\n    const newPet = {\n      name,\n      type,\n      desc,\n      skillOne,\n      skillTwo,\n      skillThree,\n\n    }\n    axios.post(\"http://localhost:5000/api/pets\", newPet)\n    .then((res) => {\n      navigate(\"/pets/\" + res.data._id)\n    })\n    .catch((err) => {\n      console.log(err)\n      setErrors(err.response?.data?.errors);\n    });\n  };\n\n  return (\n    \n    <form \n      onSubmit={(e) => {\n        handlerNewPlantSubmit(e);\n      }}\n    >\n      <div>\n      <label>Pet Name:</label>\n      {errors?.name && (\n        <span style={{ color: \"red\" }}>{errors.name.message} </span>\n      )}\n      \n      <input \n      onChange={(e) => {\n        setName(e.target.value);\n      }}\n      type=\"text\" \n      />\n      </div>\n      <div>\n      <label>Pet Type:</label>\n      {\n      errors?.type && (\n        <span style={{ color: \"red\" }}>{errors.type.message} </span>\n      )}\n      <input onChange={(e) => {\n        setType(e.target.value);\n      }}\n      type=\"text\" \n      />\n      </div>\n      <div>\n      <label>Pet Description:</label>\n      {\n      errors?.desc && (\n        <span style={{ color: \"red\" }}>{errors.desc.message} </span>\n      )}\n      <input input onChange={(e) => {\n        setDesc(e.target.value);\n      }}\n      type=\"text\" \n      ></input>\n      </div>\n\n      <div>\n      <label>Skill 1:</label>\n      {\n      errors?.skillOne && (\n        <span style={{ color: \"red\" }}>{errors.skillOne.message} </span>\n      )}\n      <input onChange={(e) => {\n        setSkillOne(e.target.value);\n      }}\n      type=\"text\" \n      ></input>\n      </div>\n      <div>\n      <label>Skill 2:</label>\n      {\n      errors?.skillTwo && (\n        <span style={{ color: \"red\" }}>{errors.skillTwo.message} </span>\n      )}\n      <input onChange={(e) => {\n        setSkillTwo(e.target.value);\n      }}\n      type=\"text\" \n      ></input>\n      </div>\n      <div>\n      <label>Skill 3:</label>\n      {\n      errors?.skillOne && (\n        <span style={{ color: \"red\" }}>{errors.skillThree.message} </span>\n      )}\n      <input onChange={(e) => {\n        setSkillThree(e.target.value);\n      }}\n      type=\"text\" \n      ></input>\n      </div>\n      <button>Add Pet</button>\n    </form>\n\n  ) \n};\n\nexport default NewPlant;","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { navigate, Link } from \"@reach/router\";\n\nconst SinglePet = (props) => {\n  const [pet, setPet] = useState(null);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/pets/\" + props.id)\n    .then((res) => {\n      setPet(res.data);\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  }, [props.id])\n\n  const handleDelete = (delId) => {\n    axios\n    .delete(\"http://localhost:5000/api/pets/\" + delId)\n    .then((res) => {\n      //At this point it is deleted\n      navigate(\"/pets\")\n\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  }\n\n  if (pet === null) {\n    return \"Loading...\";\n  }\n//product={product} gets the data past from the component to view with props\n  return ( <div>\n    <h1>Pet Shelter</h1>\n    <h2>Details about: {pet.name}</h2>\n    \n    <h3>Pet Type: {pet.type}</h3>\n    <h3>Description: {pet.desc}</h3>\n    <h3>Skills: {pet.skillOne}  {pet.skillTwo}  {pet.skillThree}</h3>\n    <div>\n    <Link to={\"/pets/\" + pet._id + \"/edit\"}>Edit</Link>\n    <button onClick={(e) => {\n            handleDelete(pet._id);\n          }}\n        style={{ color: \"red\"}}>Adopt {pet.name}</button>\n        </div>\n  </div> \n  )\n}\n\nexport default SinglePet;","import React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\nimport { navigate } from \"@reach/router\";\n\nconst EditPet = (props) => {\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [skillOne, setSkillOne] = useState(\"\");\n  const [skillTwo, setSkillTwo] = useState(\"\");\n  const [skillThree, setSkillThree] = useState(\"\");\n  const [errors, setErrors] = useState(null);\n\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/pets/\" + props.id)\n    .then((res) => {\n      setName(res.data.name);\n      setType(res.data.type);\n      setDesc(res.data.desc);\n      setSkillOne(res.data.skillOne);\n      setSkillTwo(res.data.skillTwo);\n      setSkillThree(res.data.skillThree);\n    })\n    .catch((err) => {\n      console.log(err)\n      setErrors(err.response?.data?.errors);\n    });\n  }, [props.id]);\n\n\n  const handlerEditPetSubmit = (event) => {\n    event.preventDefault();\n\n    const editPet = {\n      name,\n      type,\n      desc,\n      skillOne,\n      skillTwo,\n      skillThree,\n\n    }\n\n    axios.put(\"http://localhost:5000/api/pets/\" + props.id, editPet)\n    .then((res) => {\n      navigate(\"/pets/\" + res.data._id)\n    })\n    .catch((err) => {\n      console.log(err)\n      setErrors(err.response?.data?.errors);\n    });\n\n\n  };\n\n  return (\n    <form \n      onSubmit={(e) => {\n        handlerEditPetSubmit(e);\n      }}\n    >\n      <div>\n      <label>Pet Name:</label>\n      {errors?.name && (\n        <span style={{ color: \"red\" }}>{errors.name.message} </span>\n      )}\n      \n      <input \n      onChange={(e) => {\n        setName(e.target.value);\n      }}\n      type=\"text\"\n      value={name} \n      />\n      </div>\n      <div>\n      <label>Pet Type:</label>\n      {\n      errors?.type && (\n        <span style={{ color: \"red\" }}>{errors.type.message} </span>\n      )}\n      <input onChange={(e) => {\n        setType(e.target.value);\n      }}\n      type=\"text\"\n      value={type}  \n      />\n      </div>\n      <div>\n      <label>Pet Description:</label>\n      {\n      errors?.desc && (\n        <span style={{ color: \"red\" }}>{errors.desc.message} </span>\n      )}\n      <input input onChange={(e) => {\n        setDesc(e.target.value);\n      }}\n      type=\"text\"\n      value={desc}  \n      ></input>\n      </div>\n\n      <div>\n      <label>Skill 1:</label>\n      {\n      errors?.skillOne && (\n        <span style={{ color: \"red\" }}>{errors.skillOne.message} </span>\n      )}\n      <input onChange={(e) => {\n        setSkillOne(e.target.value);\n      }}\n      type=\"text\"\n      value={skillOne}  \n      ></input>\n      </div>\n      <div>\n      <label>Skill 2:</label>\n      {\n      errors?.skillTwo && (\n        <span style={{ color: \"red\" }}>{errors.skillTwo.message} </span>\n      )}\n      <input onChange={(e) => {\n        setSkillOne(e.target.value);\n      }}\n      type=\"text\"\n      value={skillTwo}  \n      ></input>\n      </div>\n      <div>\n      <label>Skill 3:</label>\n      {\n      errors?.skillOne && (\n        <span style={{ color: \"red\" }}>{errors.skillThree.message} </span>\n      )}\n      <input onChange={(e) => {\n        setSkillThree(e.target.value);\n      }}\n      type=\"text\"\n      value={skillThree}  \n      ></input>\n      </div>\n      <button>Submit</button>\n    </form>\n\n  ) \n};\n\nexport default EditPet;\n\n\n","const NotFound = (props) => {\n  return <div>Not Found</div>\n}\n\nexport default NotFound;","import './App.css';\nimport { Link, Router,Redirect} from '@reach/router'\nimport Pets from './views/Pets';\nimport NewPet from './views/NewPet';\nimport SinglePet from './views/SinglePet';\nimport EditPet from './views/EditPet';\nimport NotFound from './views/NotFound';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <nav>  \n        <Link to=\"/pets\">  Home  </Link>    \n          <Link to=\"/pets/new\">Add a Pet to the Shelter</Link>\n        </nav>\n      </header>\n\n      <Router>\n      <SinglePet path=\"/pets/:id\" />\n      <Pets path=\"/pets\" />\n      <EditPet path=\"/pets/:id/edit\" />\n      <NewPet path=\"/pets/new\" />\n      <Redirect from=\"/\" to=\"/pets\" noThrow=\"true\" />\n      <NotFound default />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}